name: Initialize RDS Instance and deploy Petclinic for the first time

on:
  workflow_dispatch:

jobs:
  setup-db:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repo
      uses: actions/checkout@v2

    - name: Set up SSH connection
      uses: webfactory/ssh-agent@v0.5.3
      with:
        ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

    - name: Copy SQL files to Bastion Host
      run: |
        scp -o StrictHostKeyChecking=no ./middleware/bbdd/1-createDB.sql ${{ vars.BASTION_USER }}@${{ vars.BASTION_HOST }}:/tmp/
        scp -o StrictHostKeyChecking=no ./middleware/bbdd/2-initDB.sql ${{ vars.BASTION_USER }}@${{ vars.BASTION_HOST }}:/tmp/
        scp -o StrictHostKeyChecking=no ./middleware/bbdd/3-populateDB.sql ${{ vars.BASTION_USER }}@${{ vars.BASTION_HOST }}:/tmp/

    - name: Execute SQL files on RDS through Bastion Host
      run: |
        ssh -o StrictHostKeyChecking=no ${{ vars.BASTION_USER }}@${{ vars.BASTION_HOST }} << EOF
        PGPASSWORD=${{ secrets.DB_PASSWORD }} psql -h ${{ vars.RDS_HOST }} -p ${{ vars.RDS_PORT }} -U ${{ vars.DB_USER }} -d ${{ vars.DB_NAME }} -f /tmp/1-createDB.sql
        PGPASSWORD=${{ secrets.DB_PASSWORD }} psql -h ${{ vars.RDS_HOST }} -p ${{ vars.RDS_PORT }} -U ${{ vars.DB_USER }} -d ${{ vars.DB_NAME }} -f /tmp/2-initDB.sql
        PGPASSWORD=${{ secrets.DB_PASSWORD }} psql -h ${{ vars.RDS_HOST }} -p ${{ vars.RDS_PORT }} -U ${{ vars.DB_USER }} -d ${{ vars.DB_NAME }} -f /tmp/3-populateDB.sql
        EOF
  deploy-helm-chart:
    needs: setup-db
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repo
      uses: actions/checkout@v2

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
        aws-region: ${{ vars.AWS_REGION }}

    - name: Configure Kubernetes client
      uses: silverlyra/setup-aws-eks@v0.1
      with:
        cluster: ${{ vars.EKS_CLUSTER_NAME }}

    - name: Install Helm
      run: |
        curl https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3 | bash

    - name: Deploy Helm chart
      run: |
        helm upgrade --install petclinic ./spring-petclinic --values ./spring-petclinic/values.yaml --namespace=petclinic --create-namespace=true \
        --set spring_petclinic_rest.extraEnv."spring\.datasource\.url"=${{ vars.EKS_SPRING_DATASOURCE }} \
        --set spring_petclinic_rest.extraEnv."spring\.datasource\.username"=${{ vars.DB_USER }} \
        --set spring_petclinic_rest.extraEnv."spring\.datasource\.password"=${{ secrets.DB_PASSWORD }} \
        --set ingress.tls_host=${{ vars.INGRESS_HOST }} \
        --set ingress.tls_mail=${{ vars.INGRESS_MAIL }}

        