name: Initialize RDS Instance

on:
  workflow_dispatch:

jobs:
  setup-db:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repo
      uses: actions/checkout@v2

    - name: Set up SSH connection
      uses: webfactory/ssh-agent@v0.5.3
      with:
        ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

    - name: Copy SQL files to Bastion Host
      run: |
        scp -o StrictHostKeyChecking=no ./middleware/bbdd/1-createDB.sql ${{ secrets.BASTION_USER }}@${{ secrets.BASTION_HOST }}:/tmp/
        scp -o StrictHostKeyChecking=no ./middleware/bbdd/2-initDB.sql ${{ secrets.BASTION_USER }}@${{ secrets.BASTION_HOST }}:/tmp/
        scp -o StrictHostKeyChecking=no ./middleware/bbdd/3-populateDB.sql ${{ secrets.BASTION_USER }}@${{ secrets.BASTION_HOST }}:/tmp/

    - name: Execute SQL files on RDS through Bastion Host
      run: |
        ssh -o StrictHostKeyChecking=no ${{ secrets.BASTION_USER }}@${{ secrets.BASTION_HOST }} << EOF
        PGPASSWORD=${{ secrets.DB_PASSWORD }} psql -h ${{ secrets.RDS_HOST }} -p ${{ secrets.RDS_PORT }} -U ${{ secrets.DB_USER }} -d ${{ secrets.DB_NAME }} -f /tmp/1-createDB.sql
        PGPASSWORD=${{ secrets.DB_PASSWORD }} psql -h ${{ secrets.RDS_HOST }} -p ${{ secrets.RDS_PORT }} -U ${{ secrets.DB_USER }} -d ${{ secrets.DB_NAME }} -f /tmp/2-initDB.sql
        PGPASSWORD=${{ secrets.DB_PASSWORD }} psql -h ${{ secrets.RDS_HOST }} -p ${{ secrets.RDS_PORT }} -U ${{ secrets.DB_USER }} -d ${{ secrets.DB_NAME }} -f /tmp/3-populateDB.sql
        EOF
  deploy-helm-chart:
    needs: setup-db
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repo
      uses: actions/checkout@v2


    - name: Configure AWS CLI
      run: |
        echo "${{ secrets.AWSCREDS }}" > awscreds.ini
        export AWS_ACCESS_KEY_ID=$(awk -F "=" '/aws_access_key_id/ {print $2}' awscreds.ini)
        export AWS_SECRET_ACCESS_KEY=$(awk -F "=" '/aws_secret_access_key/ {print $2}' awscreds.ini)
        export AWS_SESSION_TOKEN=$(awk -F "=" '/aws_session_token/ {print $2}' awscreds.ini)
        export AWS_REGION=${{ secrets.AWSREGION }}

    - name: Update kubeconfig
      run: |
        aws eks update-kubeconfig --name ${{ secrets.EKSCLUSTERNAME }} --region ${{ secrets.AWSREGION }}


    - name: Install Helm
      run: |
        curl https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3 | bash

    - name: Deploy Helm chart
      run: |
        helm upgrade --install petclinic ./ --values ./values.yaml